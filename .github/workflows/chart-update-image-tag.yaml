name: "Chart - Update Image Tag"

on:
  # Allow to run the workflow from GitHub UI and other workflows.
  workflow_dispatch:
    inputs:
      global-image-tag:
        description: 'Value of the "global.image.tag" in values file'
        required: false
        type: string
      # Optimize doesn't follow the unified version yet.
      optimize-image-tag:
        description: 'Value of the "optimize.image.tag" in values file'
        required: false
        type: string

jobs:
  update-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Needed to trigger other workflows from the bot PR. More details:
          # https://github.com/peter-evans/create-pull-request/blob/af7c021/docs/concepts-guidelines.md#triggering-further-workflow-runs
          ssh-key: ${{ secrets.GH_WORKFLOW_SSH_KEY_PRIVATE }}
          fetch-depth: 0
      - name: Install Helm
        uses: asdf-vm/actions/install@v1
      - name: Set images vars
        run: |
          echo "GLOBAL_IMAGE_TAG=${{ github.event.inputs.global-image-tag }}" >> "$GITHUB_ENV"
          echo "OPTIMIZE_IMAGE_TAG=${{ github.event.inputs.optimize-image-tag }}" >> "$GITHUB_ENV"
      - name: Update values file image tag
        run: |
          make tools.update-values-file-image-tag
          make go.test-golden-updated
      - name: Make sure all Docker image tags are available
        run: |
          make helm.repos-add
          camunda_docker_images="$(helm template charts/camunda-platform --skip-tests | awk '/image:.+camunda/ {gsub(/"/, "", $2); print $2}' | sort | uniq)"
          for image_name in ${camunda_docker_images}; do
              echo -e "\n\nImage: ${image_name}"
              docker pull "${image_name}"
          done
      - name: Set PR title var
        run: |
          if [[ -n "${GLOBAL_IMAGE_TAG}" && -n "${OPTIMIZE_IMAGE_TAG}" ]]; then
              CHANGED_VERSIONS_TITLE="Global:$GLOBAL_IMAGE_TAG/Optimize:$OPTIMIZE_IMAGE_TAG"
          elif [[ -n "${GLOBAL_IMAGE_TAG}" ]]; then
              CHANGED_VERSIONS_TITLE="Global:$GLOBAL_IMAGE_TAG"
          elif [[ -n "${OPTIMIZE_IMAGE_TAG}" ]]; then
              CHANGED_VERSIONS_TITLE="Optimize:$OPTIMIZE_IMAGE_TAG"
          fi
          echo "CHANGED_VERSIONS_TITLE=$CHANGED_VERSIONS_TITLE" >> "$GITHUB_ENV"
          echo $CHANGED_VERSIONS_TITLE
      - name: Create pull request with the changes
        uses: peter-evans/create-pull-request@v4
        with:
          branch: chart-update-image-tag
          commit-message: "Update Camunda Platform image tag to ${{ env.CHANGED_VERSIONS_TITLE }}"
          title: "[BOT] Update Camunda Platform image tag to ${{ env.CHANGED_VERSIONS_TITLE }}"
          body: |
            Update camunda-platform Helm chart image tag to:
            - global.image.tag: `${{ env.GLOBAL_IMAGE_TAG }}`
            - optimize.image.tag: `${{ env.OPTIMIZE_IMAGE_TAG }}`
          labels: |
            bot
            chore
            camunda-platform
          delete-branch: true
