apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tasklist.fullname" . }}
  labels: {{- include "tasklist.labels" . | nindent 4 }}
  annotations: {{- toYaml  .Values.global.annotations | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "tasklist.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: 
        {{- include "tasklist.labels" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- toYaml  .Values.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      imagePullSecrets:
        {{- include "camundaPlatform.imagePullSecrets" . | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        {{- if .Values.image.tag }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        {{- else }}
        image: "{{ .Values.image.repository }}:{{ .Values.global.image.tag }}"
        {{- end }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        {{- if .Values.containerSecurityContext }}
        securityContext: {{- toYaml .Values.containerSecurityContext | nindent 10 }}
        {{- end }}
        env:
          {{- if .Values.contextPath }}
          - name: SERVER_SERVLET_CONTEXT_PATH
            value: {{ .Values.contextPath | quote }}
          {{- end }}
          {{- if .Values.global.identity.auth.enabled }}
          - name: SPRING_PROFILES_ACTIVE
            value: "identity-auth"
          - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI
            value: {{ include "camundaPlatform.issuerBackendUrl" . | quote }}
          - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWKSETURI
            value: {{ printf "%s%s" (include "camundaPlatform.issuerBackendUrl" .) "/protocol/openid-connect/certs" | quote }}
          - name: CAMUNDA_TASKLIST_IDENTITY_ISSUER_URL
            value: {{ .Values.global.identity.auth.publicIssuerUrl | quote }}
          - name: CAMUNDA_TASKLIST_IDENTITY_ISSUER_BACKEND_URL
            value: {{ include "camundaPlatform.issuerBackendUrl" . | quote }}
          - name: CAMUNDA_TASKLIST_IDENTITY_CLIENT_ID
            value: "tasklist"
          - name: CAMUNDA_TASKLIST_IDENTITY_CLIENT_SECRET
            {{- if and .Values.global.identity.auth.tasklist.existingSecret (not (typeIs "string" .Values.global.identity.auth.tasklist.existingSecret)) }}
            valueFrom:
              secretKeyRef:
                {{- /*
                    Helper: https://github.com/bitnami/charts/blob/master/bitnami/common/templates/_secrets.tpl
                    Usage in keycloak secrets https://github.com/bitnami/charts/blob/master/bitnami/keycloak/templates/secrets.yaml
                    and in statefulset https://github.com/bitnami/charts/blob/master/bitnami/keycloak/templates/statefulset.yaml
                */}}
                name: {{ include "common.secrets.name" (dict "existingSecret" .Values.global.identity.auth.tasklist.existingSecret "context" $) }}
                key: tasklist-secret
            {{- else }}
            valueFrom:
              secretKeyRef:
                name: {{ include "identity.secretNameTasklistIdentity" . }}
                key: tasklist-secret
            {{- end }}
          - name: CAMUNDA_TASKLIST_IDENTITY_AUDIENCE
            value: "tasklist-api"
          {{- else }}
          - name: SPRING_PROFILES_ACTIVE
            value: "auth"
          {{- end }}
          - name: GRAPHQL_PLAYGROUND_ENABLED
            value: {{ default "true" .Values.graphqlPlaygroundEnabled | quote }}
          - name: GRAPHQL_PLAYGROUND_SETTINGS_REQUEST_CREDENTIALS
            value: {{ default "include" .Values.graphqlPlaygroundRequestCredentials | quote }}
          {{- with .Values.env }}
            {{- tpl (toYaml .) $ | nindent 10 }}
          {{- end }}
        {{- if .Values.command}}
        command: {{ .Values.command }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: /app/resources/application.yml
          subPath: application.yml
        {{- if .Values.extraVolumeMounts}}
        {{- .Values.extraVolumeMounts | toYaml | nindent 8 }}
        {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "tasklist.fullname" . }}
          defaultMode: {{ .Values.configMap.defaultMode }}
      {{- if .Values.extraVolumes}}
      {{- .Values.extraVolumes | toYaml | nindent 6 }}
      {{- end }}
      {{- if .Values.podSecurityContext }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
