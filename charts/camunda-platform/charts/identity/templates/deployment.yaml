apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "identity.fullname" . }}
  labels: {{- include "identity.labels" . | nindent 4 }}
  annotations: {{- toYaml  .Values.global.annotations | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels: {{- include "identity.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "identity.labels" . | nindent 8 }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- toYaml  .Values.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      imagePullSecrets:
        {{- include "camundaPlatform.imagePullSecrets" . | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ include "camundaPlatform.image" . | quote }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        {{- if .Values.containerSecurityContext }}
        securityContext: {{- toYaml .Values.containerSecurityContext | nindent 10 }}
        {{- end }}
        env:
          {{- if .Values.fullURL }}
          - name: IDENTITY_URL
            value: {{ .Values.fullURL | quote }}
          {{- end }}
          {{- if .Values.contextPath }}
          - name: IDENTITY_BASE_PATH
            value: {{ .Values.contextPath | quote }}
          {{- end }}
          - name: KEYCLOAK_USERS_0_USERNAME
            value: {{ .Values.firstUser.username | quote }}
          - name: KEYCLOAK_USERS_0_PASSWORD
            value: {{ .Values.firstUser.password | quote }}
          - name: KEYCLOAK_USERS_0_ROLES_0
            value: "Identity"
          {{- if .Values.global.identity.auth.enabled }}
          - name: KEYCLOAK_USERS_0_ROLES_1
            value: "Operate"
          - name: KEYCLOAK_INIT_OPERATE_SECRET
            {{- if and .Values.global.identity.auth.operate.existingSecret (not (typeIs "string" .Values.global.identity.auth.operate.existingSecret)) }}
            valueFrom:
              secretKeyRef:
                {{- /*
                    Helper: https://github.com/bitnami/charts/blob/master/bitnami/common/templates/_secrets.tpl
                    Usage in keycloak secrets https://github.com/bitnami/charts/blob/master/bitnami/keycloak/templates/secrets.yaml
                    and in statefulset https://github.com/bitnami/charts/blob/master/bitnami/keycloak/templates/statefulset.yaml
                */}}
                name: {{ include "common.secrets.name" (dict "existingSecret" .Values.global.identity.auth.operate.existingSecret "context" $) }}
                key: operate-secret
            {{- else }}
            valueFrom:
              secretKeyRef:
                name: {{ include "identity.secretNameOperateIdentity" . }}
                key: operate-secret
            {{- end }}
          - name: KEYCLOAK_INIT_OPERATE_ROOT_URL
            value: {{ .Values.global.identity.auth.operate.redirectUrl | quote }}
          - name: KEYCLOAK_USERS_0_ROLES_2
            value: "Tasklist"
          - name: KEYCLOAK_INIT_TASKLIST_SECRET
            {{- if and .Values.global.identity.auth.tasklist.existingSecret (not (typeIs "string" .Values.global.identity.auth.tasklist.existingSecret)) }}
            valueFrom:
              secretKeyRef:
                {{- /*
                    Helper: https://github.com/bitnami/charts/blob/master/bitnami/common/templates/_secrets.tpl
                    Usage in keycloak secrets https://github.com/bitnami/charts/blob/master/bitnami/keycloak/templates/secrets.yaml
                    and in statefulset https://github.com/bitnami/charts/blob/master/bitnami/keycloak/templates/statefulset.yaml
                */}}
                name: "{{ include "common.secrets.name" (dict "existingSecret" .Values.global.identity.auth.tasklist.existingSecret "context" $) }}"
                key: tasklist-secret
            {{- else }}
            valueFrom:
              secretKeyRef:
                name: {{ include "identity.secretNameTasklistIdentity" . }}
                key: tasklist-secret
            {{- end }}
          - name: KEYCLOAK_INIT_TASKLIST_ROOT_URL
            value: {{ .Values.global.identity.auth.tasklist.redirectUrl | quote }}
          - name: KEYCLOAK_USERS_0_ROLES_3
            value: "Optimize"
          - name: KEYCLOAK_INIT_OPTIMIZE_SECRET
            {{- if and .Values.global.identity.auth.optimize.existingSecret (not (typeIs "string" .Values.global.identity.auth.optimize.existingSecret)) }}
            valueFrom:
              secretKeyRef:
                {{- /*
                    Helper: https://github.com/bitnami/charts/blob/master/bitnami/common/templates/_secrets.tpl
                    Usage in keycloak secrets https://github.com/bitnami/charts/blob/master/bitnami/keycloak/templates/secrets.yaml
                    and in statefulset https://github.com/bitnami/charts/blob/master/bitnami/keycloak/templates/statefulset.yaml
                */}}
                name: {{ include "common.secrets.name" (dict "existingSecret" .Values.global.identity.auth.optimize.existingSecret "context" $) }}
                key: optimize-secret
            {{- else }}
            valueFrom:
              secretKeyRef:
                name: {{ include "identity.secretNameOptimizeIdentity" . }}
                key: optimize-secret
          {{- end }}
          - name: KEYCLOAK_INIT_OPTIMIZE_ROOT_URL
            value: {{ .Values.global.identity.auth.optimize.redirectUrl | quote }}
          {{- end }}
          - name: SERVER_PORT
            value: "8080"
          - name: KEYCLOAK_URL
            value: {{ include "identity.keycloak.url" . | quote }}
          - name: IDENTITY_AUTH_PROVIDER_ISSUER_URL
            value: {{ .Values.global.identity.auth.publicIssuerUrl | quote }}
          - name: IDENTITY_AUTH_PROVIDER_BACKEND_URL
            value: {{ include "camundaPlatform.issuerBackendUrl" . | quote }}
          - name: KEYCLOAK_SETUP_USER
            value: {{ include "identity.keycloak.authAdminUser" . | quote }}
          - name: KEYCLOAK_SETUP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "identity.keycloak.authExistingSecret" . }}
                key: {{ include "identity.keycloak.authExistingSecretKey" . }}
        {{- with .Values.env }}
            {{- tpl (toYaml .) $ | nindent 10 }}
        {{- end }}
        {{- if .Values.command}}
        command: {{ .Values.command }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        {{- if .Values.extraVolumeMounts}}
        volumeMounts:
        {{- .Values.extraVolumeMounts | toYaml | nindent 8 }}
        {{- end }}
      {{- if .Values.extraVolumes}}
      volumes:
      {{- .Values.extraVolumes | toYaml | nindent 6 }}
      {{- end }}
      {{- if .Values.serviceAccount.name}}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      {{- if .Values.podSecurityContext }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
      {{- end }}
